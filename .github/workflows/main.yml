name: CI/CD

on:
  push:
  pull_request:

env:
  PROJECT_NAME: alpinebits-destination-data-proxy
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
  DOCKER_TAG: ${{ github.sha }}
  SERVER_PORT: 1012


jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        env:
          X_DOCKER_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          
      - name: create openapi specification 
        uses: noi-techpark/github-actions/npm-build@v2
        with:
          working-directory: './openapi/'
          node-version: '14'
          build-command: 'npm run bundle'

      - name: Build
        run: docker-compose -f infrastructure/docker-compose.build.yml build
    
      - name: Shut down
        run: docker-compose -f infrastructure/docker-compose.build.yml down || true


  deploy-test:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        env:
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_SERVER_PORT: ${{ env.SERVER_PORT }}
          X_URL_BASE: "https://destinationdata.alpinebits.opendatahub.testingmachine.eu"
          X_URL_SWAGGER: "https://swagger.opendatahub.bz.it/?url=https://destinationdata.alpinebits.opendatahub.testingmachine.eu/specification.json"
          X_URL_VERSION_1_0: "http://docker02.testingmachine.eu:1003"
          X_URL_VERSION_2021_04: "http://docker02.testingmachine.eu:1006"
          X_URL_VERSION_2022_04: "http://docker02.testingmachine.eu:1018"

      - name: create openapi specification 
        uses: noi-techpark/github-actions/npm-build@v2
        with:
          working-directory: './openapi/'
          node-version: '14'
          build-command: 'npm run bundle'

      - name: Build and push 
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          hosts: 'test'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}

  deploy-prod:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    concurrency: deploy-prod
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        env:
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_SERVER_PORT: ${{ env.SERVER_PORT }}
          X_URL_BASE: "https://destinationdata.alpinebits.opendatahub.bz.it"
          X_URL_SWAGGER: "https://swagger.opendatahub.bz.it/?url=https://destinationdata.alpinebits.opendatahub.bz.it/specification.json"
          X_URL_VERSION_1_0: "http://docker04.opendatahub.bz.it:1003"
          X_URL_VERSION_2021_04: "http://docker04.opendatahub.bz.it:1006"
          X_URL_VERSION_2022_04: "http://docker04.opendatahub.bz.it:1018"

      - name: create openapi specification 
        uses: noi-techpark/github-actions/npm-build@v2
        with:
          working-directory: './openapi/'
          node-version: '14'
          build-command: 'npm run bundle'

      - name: Build and push 
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          hosts: 'prod'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}
